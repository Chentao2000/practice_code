
/******************************************************************************

3.4 例题 ：完美立方 
问题描述 ： 
    费马大定理断言，当 整数 n >  2 时，
    关于 a b c 的方程  a n次方  + b n次方  = c n次方 没有正整数解
    
// 这个定理 计算机证明不了 但是 我们可以用计算机 证明完美立方等式
    关于 a b c d 的方程  a n次方  = b n次方 + c n次方  + d n次方 

编写一个程序 ，对于任意给定的正整数 N （N < 100）寻找所有的四元组 （a,b,c,d）
满足· a3 次方 + b 3次方 + c 3次方 = d 3次方，其中 1 < a b c d < N


输入样例 : 24

输出样例 :  CUBE = 6 , Triple = ( 3 4 5 ) 
            CUBE = 12 , Triple =  ( 6 8 10 )
            CUBE = 18 , Triple = ( 2 12 16 ) 
            CUBE = 18 , Triple = ( 9 12 15 )
            CUBE = 19 ,Triple = ( 3 10 18 )
            CUBE = 20 , Triple = ( 7 14 17 )
            CUBE = 24 , Triple = ( 12 16 20 )
            
            
解题思路 ： 暴力枚举 ：我只需要给出条件 ，计算机自己计算判断

1 . 确定abcd 取值范围和枚举顺序  其中 CUBE 最小值 为 6 
    即 a >= 6  ( 2 3 4 5 )
    而 A 应该在循环的最外层 ，从小到大枚举 

2. 由它的题意可知 2 <= b <= c <= d < a 所以循环由外至内为 b c d  
    他们取值下限都是 a - 1 ,下限分别是 2 b c 
    
3. 避免重复计算，在循环的最内层，需要在判断是否满足 a3 = b3 + c3 + d3 时计算4次的立方值
    而 a b c d 经常取之前去过的值，因此会产生很多次重复的计算，这里 1 < a < b < c < d <= N
    因此实际上最多只需要 计算 2 ~ N的立方 ，可以考虑用一个数组存储事先计算好的立方值
    使用时直接访问即可
    


避免重复计算 : 循环最内层，需要在判断 是否满足 A 平方 + 
                        
*******************************************************************************/


#include <cstdio>
int main(){
    int N,a,b,c,d;
    int cube[100000];
    scanf("%d",&N);
    for (int i = 0; i <= N; i++) 
        // 预 处理 2 ~ N 次方
        cube[i]=i*i*i;
    for(a = 6;a <= N;a++) // 枚举 A
        for(b =2 ; b < a; b ++)  // 枚举B
            for( c = b ; c < a ; c++) // 枚举C
                for ( d = c ; d < a; d ++  ) //枚举 d
                if(cube[a] == cube[b] + cube[c] + cube[d])
                //判断条件是否成立
                printf("Cube = %d ,Triple = (%d %d %d)\n",a,b,c,d);
                
     
    return 0;
}
